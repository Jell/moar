Functor:
- Apply a function to a wrapped value
- a -> m a
- lift-f

Applicative:
? What's the difference with functor in our case?


- Apply a wrapped function to a wrapped value
- (m a)+ -> m a
- lift-a

lift :: Monad m => m a -> t m a
Lift a computation from the argument monad to the constructed monad.

liftA :: Applicative f => (a -> b) -> f a -> f b
Lift a function to actions.
buThis function may be used as a value for fmap in a Functor instance.

liftM :: Monad m => (a1 -> r) -> m a1 -> m r
Promote a function to a monad.
